delegation : 
Ce code a pour but de localiser g√©ographiquement des donn√©es issues d‚Äôun fichier CSV, en associant chaque point (d√©fini par sa longitude et sa latitude) √† une d√©l√©gation administrative
pr√©sente dans un fichier shapefile (fichier cartographique vectoriel). Il nettoie d‚Äôabord les coordonn√©es GPS, cr√©e une repr√©sentation g√©ographique des points √† l‚Äôaide de GeoPandas, puis
effectue une jointure spatiale avec une carte des d√©l√©gations afin d‚Äôidentifier √† quelle zone administrative chaque point appartient. Enfin, il permet de sauvegarder ces informations enrichies 
et de visualiser les r√©sultats sur une carte pour des analyses spatiales.
extract_technology : 
Ce code a pour objectif de traiter des colonnes contenant du texte au format JSON dans un fichier CSV, afin d‚Äôen extraire automatiquement les noms de technologies et
les offres associ√©es, puis de les stocker dans de nouvelles colonnes plus facilement exploitables.

Voici ce que fait chaque √©tape :

    Lecture du fichier CSV : le fichier source (data_fixed.csv) est charg√© avec le bon s√©parateur (|).

    Traitement du JSON : une fonction corrige les cha√Ænes de caract√®res JSON mal format√©es (apostrophes, bool√©ens) et extrait :

        les noms des technologies (technology_name)

        les noms des offres (offer_name) contenues dans chaque technologie

    Application de la fonction :

        D‚Äôabord sur la colonne response_body (r√©ponse re√ßue)

        Puis sur request_body (requ√™te envoy√©e)
        Les r√©sultats sont stock√©s dans des colonnes comme response_extracted_technologies, response_offers, etc.

    Export final : les nouvelles donn√©es enrichies sont sauvegard√©es dans un fichier CSV (data_extracted.csv).

üëâ Ce traitement permet de structurer des informations complexes imbriqu√©es dans des champs JSON pour faciliter les analyses futures (comptage, filtrage, etc.).
